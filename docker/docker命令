docker pull == 拉取镜像
docker push == 推送镜像
tips：推送到私有仓库前必须先tag。以镜像仓库地址为前缀
1，重新tag本地镜像 - docker tag nginx:latest 192.168.68.132:8080/nginx:1.0
2，推送镜像 - docker push 192.168.68.132:8080/nginx:1.0
docker save == 导出镜像为压缩包 -- docker save -o nginx.tar nginx:latest
docker load == 加载压缩包为镜像 -- docker load -i nginx.tar
docker build == 使用dockerfile构建镜像 -- docker build -t javaweb:1.0 .
javaweb:1.0 -- 镜像名:TAG
. -- dockerfile所在路径

docker logs == 查看日志 -- docker logs -f 容器名（跟 tail -f 一样）

docker exec == 进入容器 -- docker exec -it 容器名 bash

docker volume == 数据卷命令
-- docker volume create 数据卷名 == 创建
-- docker volume rm 数据卷名 == 删除
-- docker volume inspect == 显示指定数据卷的详细信息 -- docker volume inspect 数据卷名
-- docker volume ls == 显示全部的数据卷
-- docker volume prune == 删除全部本地未使用的数据卷

docker run == 运行容器 docker run --name 容器名 -p 80:80 -v 数据卷名（宿主机文件地址）:容器内文件地址 -d nginx
-p：左边是宿主机端口，右边是容器内端口。一般宿主机端口可以自定义
-d：后台运行
-v：挂载。[宿主机目录]:[容器内目录] [宿主机文件]:[容器内文件]。如果宿主机地址不存在会自动创建